#ifndef IS_RIGID
  #define IS_RIGID 0
#endif
#ifndef IS_SKINNED
  #define IS_SKINNED 0
#endif
#if IS_RIGID == IS_SKINNED
  #error "IS_RIGID is equal to IS_SKINNED"
#endif

#if IS_RIGID
#define ShaderModelVS ShaderRigidVS
#define ShaderModelPS ShaderRigidPS
#endif
#if IS_SKINNED
#define ShaderModelVS ShaderSkinnedVS
#define ShaderModelPS ShaderSkinnedPS
#endif

cbuffer UBO : register(b0, space1)
{
  float4x4 camera_transform;
};

struct VSInput
{
  float3 position : TEXCOORD0;
  float3 color    : TEXCOORD1;
  float3 normal   : TEXCOORD2;
#if IS_SKINNED
  uint joints_packed4 : TEXCOORD3;
  float4 weights      : TEXCOORD4;
#endif
  uint InstanceIndex : SV_InstanceID;
};

struct VSOutput
{
  float4 color : TEXCOORD0;
  float4 position : SV_Position;
};

struct VSModelInstanceData
{
  float4x4 transform;
  float4 color;
};

StructuredBuffer<VSModelInstanceData> InstanceBuffer : register(t0);

#if IS_SKINNED
static float4x4 joint_inv_bind_mats[] =
{
  // Root
  1.000000f,0.000000f,0.000000f,0.000000f,
  0.000000f,1.000000f,0.000000f,0.000000f,
  0.000000f,0.000000f,1.000000f,-0.072289f,
  0.000000f,0.000000f,0.072289f,0.994774f,
  // Body
  0.090791f,0.000000f,-0.995870f,0.067971f,
  0.000000f,1.000000f,0.000000f,-0.973595f,
  0.995870f,0.000000f,0.090791f,-0.006652f,
  -0.003937f,0.937146f,-0.000814f,0.087657f,
  // Hips
  1.000000f,-0.000000f,-0.000000f,0.000344f,
  -0.000000f,0.839079f,-0.544010f,-0.798682f,
  0.000000f,0.544010f,0.839079f,-0.610527f,
  -0.000797f,0.029243f,-0.007643f,0.971285f,
  // Abdomen
  1.000000f,-0.000000f,0.000000f,0.000344f,
  0.000000f,0.955595f,-0.294684f,-1.039606f,
  -0.000000f,0.294684f,0.955595f,-0.386614f,
  0.000000f,0.101393f,-0.031267f,0.889693f,
  // Torso
  0.077127f,-0.021863f,0.996781f,-0.010625f,
  -0.801268f,0.593584f,0.075018f,-0.743285f,
  -0.593313f,-0.804475f,0.028263f,1.001845f,
  -0.113611f,0.084164f,0.010637f,0.894610f,
  // Chest
  1.000000f,0.000000f,-0.000000f,0.000344f,
  -0.000000f,0.999844f,0.017641f,-1.377807f,
  0.000000f,-0.017641f,0.999844f,-0.016256f,
  -0.000000f,0.130381f,0.002300f,0.820332f,
  // Neck
  1.000000f,-0.000000f,-0.000000f,0.000344f,
  0.000000f,0.998230f,-0.059473f,-1.505297f,
  0.000000f,0.059473f,0.998230f,-0.132844f,
  0.000000f,0.133015f,-0.007925f,0.799418f,
  // Head
  1.000000f,0.000798f,0.000000f,-0.000923f,
  -0.000789f,0.988164f,-0.153398f,-1.561866f,
  -0.000122f,0.153398f,0.988164f,-0.286056f,
  -0.000061f,0.075820f,-0.011770f,0.880160f,
  // Shoulder.L
  0.422168f,0.305249f,0.853579f,-0.511535f,
  -0.647231f,0.760778f,0.048050f,-1.034932f,
  -0.634717f,-0.572748f,0.518743f,0.814817f,
  -0.015325f,0.032307f,0.076292f,0.950552f,
  // UpperArm.L
  -0.857279f,0.257161f,0.446028f,-0.297148f,
  0.204408f,0.965123f,-0.163571f,-1.407097f,
  -0.472536f,-0.049054f,-0.879945f,0.178937f,
  0.012988f,0.061326f,-0.010394f,0.910590f,
  // LowerArm.L
  -0.972380f,0.125944f,0.196506f,0.132395f,
  0.059412f,-0.680627f,0.730218f,0.921481f,
  0.225713f,0.721724f,0.654345f,-1.153770f,
  0.012893f,-0.147701f,0.158463f,1.199969f,
  // Wrist.L
  0.099659f,-0.059145f,0.993262f,-0.062039f,
  0.992026f,0.083307f,-0.094575f,-0.674523f,
  -0.077152f,0.994767f,0.066976f,-1.398963f,
  0.233787f,0.019633f,-0.022288f,0.841037f,
  // Index1.L
  -0.628041f,0.473032f,0.617904f,-0.367360f,
  0.542349f,-0.303354f,0.783476f,0.043105f,
  0.558053f,0.827174f,-0.066029f,-1.520738f,
  0.014752f,-0.008251f,0.021310f,1.001172f,
  // Index2.L
  0.437024f,-0.805207f,0.400813f,0.796161f,
  0.846212f,0.217042f,-0.486638f,-0.855236f,
  0.304851f,0.551846f,0.776229f,-1.102739f,
  0.102411f,0.026267f,-0.058895f,0.896497f,
  // Index3.L
  0.087238f,-0.102854f,0.990864f,-0.039175f,
  0.926701f,-0.356594f,-0.118604f,-0.160386f,
  0.365535f,0.928581f,0.064207f,-1.617108f,
  0.029445f,-0.011331f,-0.003769f,0.994904f,
  // Index4.L
  0.015642f,-0.221241f,0.975093f,0.185257f,
  0.999031f,-0.036678f,-0.024347f,-0.714738f,
  0.041151f,0.974529f,0.220453f,-1.466758f,
  0.028621f,-0.001051f,-0.000697f,0.979523f,
  // Middle1.L
  0.089447f,0.074859f,0.993174f,-0.253510f,
  0.993740f,-0.073714f,-0.083942f,-0.476546f,
  0.066927f,0.994466f,-0.080984f,-1.469044f,
  0.027029f,-0.002005f,-0.002283f,0.987038f,
  // Middle2.L
  0.309611f,-0.404085f,0.860730f,0.281259f,
  0.887929f,-0.200980f,-0.413749f,-0.304892f,
  0.340180f,0.892368f,0.296574f,-1.560206f,
  0.106416f,-0.024087f,-0.049587f,0.963459f,
  // Middle3.L
  -0.131522f,-0.040976f,0.990466f,0.064976f,
  0.760612f,-0.644938f,0.074319f,0.354030f,
  0.635744f,0.763135f,0.115991f,-1.595199f,
  0.029805f,-0.025272f,0.002912f,1.013873f,
  // Middle4.L
  -0.014151f,-0.339684f,0.940433f,0.415185f,
  0.999870f,0.002442f,0.015928f,-0.797441f,
  -0.007707f,0.940536f,0.339605f,-1.390427f,
  0.039160f,0.000096f,0.000624f,0.968768f,
  // Ring1.L
  0.842270f,0.174244f,0.510117f,-0.799862f,
  0.538707f,-0.238068f,-0.808157f,0.098664f,
  -0.019374f,0.955491f,-0.294384f,-1.341619f,
  0.014653f,-0.006475f,-0.021982f,1.002684f,
  // Ring2.L
  -0.019341f,-0.699181f,0.714683f,0.971919f,
  0.988312f,-0.121476f,-0.092095f,-0.521614f,
  0.151208f,0.704549f,0.693359f,-1.169145f,
  0.117863f,-0.014487f,-0.010983f,0.937794f,
  // Ring3.L
  -0.065641f,-0.472366f,0.878955f,0.675226f,
  0.817770f,-0.530218f,-0.223877f,0.171312f,
  0.571790f,0.704087f,0.421091f,-1.467732f,
  0.026924f,-0.017457f,-0.007371f,1.005640f,
  // Ring4.L
  0.125938f,-0.282999f,0.950816f,0.255926f,
  0.920012f,-0.325219f,-0.218655f,-0.229645f,
  0.371103f,0.902299f,0.219405f,-1.606316f,
  0.029611f,-0.010468f,-0.007038f,0.992609f,
  // Pinky1.L
  0.954545f,0.132750f,-0.266875f,-0.734556f,
  -0.233062f,-0.225745f,-0.945897f,0.552504f,
  -0.185814f,0.965099f,-0.184544f,-1.266737f,
  -0.006339f,-0.006140f,-0.025728f,1.015028f,
  // Pinky2.L
  -0.234032f,-0.327605f,0.915371f,0.593073f,
  0.879891f,-0.471854f,0.056087f,0.060147f,
  0.413547f,0.818553f,0.398686f,-1.486882f,
  0.102033f,-0.054716f,0.006504f,1.006974f,
  // Pinky3.L
  0.146995f,0.131694f,0.980331f,-0.335362f,
  0.897582f,-0.434203f,-0.076257f,-0.021816f,
  0.415620f,0.891137f,-0.182032f,-1.579695f,
  0.023130f,-0.011189f,-0.001965f,0.999438f,
  // Pinky4.L
  0.283153f,-0.050535f,0.957742f,-0.169798f,
  0.789175f,-0.555192f,-0.262611f,0.218425f,
  0.545002f,0.830186f,-0.117323f,-1.605634f,
  0.021117f,-0.014856f,-0.007027f,1.005845f,
  // Thumb1.L
  0.961323f,0.191074f,-0.198365f,-0.829209f,
  -0.271504f,0.536344f,-0.799138f,-0.539300f,
  -0.046303f,0.822086f,0.567477f,-1.212857f,
  -0.007385f,0.014588f,-0.021736f,0.985331f,
  // Thumb2.L
  -0.261609f,-0.963106f,0.063149f,1.519913f,
  0.009866f,0.062756f,0.997980f,-0.244889f,
  -0.965123f,0.261704f,-0.006916f,0.253918f,
  0.000818f,0.005202f,0.082716f,0.979703f,
  // Thumb3.L
  0.153952f,-0.119559f,0.980818f,-0.101199f,
  0.801731f,-0.565076f,-0.194723f,0.292214f,
  0.577517f,0.816330f,0.008860f,-1.536487f,
  0.024951f,-0.017586f,-0.006060f,1.009094f,
  // Shoulder.R
  0.422169f,-0.305249f,-0.853579f,0.511535f,
  0.647231f,0.760778f,0.048050f,-1.034932f,
  0.634717f,-0.572748f,0.518743f,0.814817f,
  0.015609f,0.032107f,0.075708f,0.950889f,
  // UpperArm.R
  -0.293990f,-0.879674f,-0.373824f,1.257398f,
  -0.499226f,0.474842f,-0.724774f,-0.700562f,
  0.815072f,-0.026454f,-0.578755f,0.168526f,
  -0.031722f,0.030172f,-0.046054f,0.955485f,
  // LowerArm.R
  -0.223301f,0.957491f,0.182615f,-1.466776f,
  -0.542096f,-0.277688f,0.793109f,0.175014f,
  0.810104f,0.078107f,0.581060f,0.125606f,
  -0.117639f,-0.060260f,0.172111f,1.037979f,
  // Wrist.R
  0.277238f,0.076347f,-0.957763f,0.134704f,
  -0.959193f,0.079633f,-0.271304f,-0.634412f,
  0.055556f,0.993896f,0.095309f,-1.412553f,
  -0.226050f,0.018767f,-0.063937f,0.850490f,
  // Index1.R
  -0.628041f,-0.473032f,-0.617904f,0.367360f,
  -0.542349f,-0.303354f,0.783476f,0.043105f,
  -0.558053f,0.827174f,-0.066029f,-1.520738f,
  -0.014752f,-0.008251f,0.021310f,1.001172f,
  // Index2.R
  0.445374f,0.797544f,-0.406896f,-0.778483f,
  -0.816197f,0.174838f,-0.550686f,-0.765564f,
  -0.368055f,0.577369f,0.728821f,-1.178647f,
  -0.098779f,0.021159f,-0.066646f,0.907349f,
  // Index3.R
  0.084212f,0.101706f,-0.991244f,0.038628f,
  -0.902966f,-0.412885f,-0.119076f,-0.061608f,
  -0.421380f,0.905087f,0.057068f,-1.623887f,
  -0.028691f,-0.013119f,-0.003784f,0.998042f,
  // Index4.R
  0.015642f,0.221241f,-0.975093f,-0.185256f,
  -0.999031f,-0.036678f,-0.024347f,-0.714738f,
  -0.041151f,0.974529f,0.220453f,-1.466758f,
  -0.028621f,-0.001051f,-0.000697f,0.979523f,
  // Middle1.R
  0.089447f,-0.074859f,-0.993174f,0.253510f,
  -0.993740f,-0.073714f,-0.083942f,-0.476546f,
  -0.066927f,0.994466f,-0.080984f,-1.469044f,
  -0.027029f,-0.002005f,-0.002283f,0.987038f,
  // Middle2.R
  0.207169f,0.407598f,-0.889351f,-0.356814f,
  -0.908223f,-0.257747f,-0.329693f,-0.245323f,
  -0.363610f,0.876031f,0.316793f,-1.555253f,
  -0.108848f,-0.030890f,-0.039513f,0.970599f,
  // Middle3.R
  -0.131522f,0.040976f,-0.990466f,-0.064976f,
  -0.760612f,-0.644938f,0.074319f,0.354031f,
  -0.635744f,0.763135f,0.115990f,-1.595199f,
  -0.029805f,-0.025272f,0.002912f,1.013873f,
  // Middle4.R
  -0.014151f,0.339684f,-0.940433f,-0.415185f,
  -0.999870f,0.002443f,0.015928f,-0.797441f,
  0.007708f,0.940536f,0.339605f,-1.390427f,
  -0.039160f,0.000096f,0.000624f,0.968768f,
  // Ring1.R
  0.842270f,-0.174244f,-0.510117f,0.799862f,
  -0.538707f,-0.238068f,-0.808157f,0.098664f,
  0.019374f,0.955491f,-0.294384f,-1.341618f,
  -0.014653f,-0.006475f,-0.021982f,1.002684f,
  // Ring2.R
  -0.019341f,0.699181f,-0.714683f,-0.971919f,
  -0.988312f,-0.121476f,-0.092095f,-0.521614f,
  -0.151208f,0.704549f,0.693359f,-1.169145f,
  -0.117863f,-0.014487f,-0.010983f,0.937794f,
  // Ring3.R
  -0.065641f,0.472366f,-0.878955f,-0.675226f,
  -0.817770f,-0.530219f,-0.223877f,0.171313f,
  -0.571790f,0.704087f,0.421090f,-1.467732f,
  -0.026924f,-0.017457f,-0.007371f,1.005640f,
  // Ring4.R
  0.125938f,0.282999f,-0.950816f,-0.255926f,
  -0.920012f,-0.325219f,-0.218655f,-0.229645f,
  -0.371103f,0.902299f,0.219405f,-1.606316f,
  -0.029611f,-0.010468f,-0.007038f,0.992609f,
  // Pinky1.R
  0.954544f,-0.132750f,0.266875f,0.734556f,
  0.233062f,-0.225745f,-0.945897f,0.552504f,
  0.185814f,0.965099f,-0.184544f,-1.266737f,
  0.006339f,-0.006140f,-0.025728f,1.015028f,
  // Pinky2.R
  -0.671982f,0.486416f,-0.558425f,-1.145240f,
  -0.740469f,-0.429017f,0.517349f,0.074706f,
  0.012073f,0.761146f,0.648468f,-1.117593f,
  -0.085865f,-0.049749f,0.059992f,1.008663f,
  // Pinky3.R
  0.146995f,-0.131694f,-0.980331f,0.335363f,
  -0.897582f,-0.434203f,-0.076258f,-0.021816f,
  -0.415620f,0.891137f,-0.182032f,-1.579695f,
  -0.023130f,-0.011189f,-0.001965f,0.999438f,
  // Pinky4.R
  0.283153f,0.050535f,-0.957742f,0.169798f,
  -0.789175f,-0.555192f,-0.262611f,0.218424f,
  -0.545002f,0.830186f,-0.117323f,-1.605634f,
  -0.021117f,-0.014856f,-0.007027f,1.005845f,
  // Thumb1.R
  0.978928f,-0.179164f,-0.097986f,0.849972f,
  0.030662f,0.603353f,-0.796884f,-0.779515f,
  0.201893f,0.777088f,0.596132f,-1.057997f,
  0.000834f,0.016411f,-0.021675f,0.978797f,
  // Thumb2.R
  -0.261609f,0.963106f,-0.063149f,-1.519913f,
  -0.009866f,0.062756f,0.997980f,-0.244889f,
  0.965123f,0.261704f,-0.006916f,0.253918f,
  -0.000818f,0.005201f,0.082716f,0.979703f,
  // Thumb3.R
  0.153952f,0.119559f,-0.980818f,0.101199f,
  -0.801731f,-0.565076f,-0.194723f,0.292214f,
  -0.577518f,0.816330f,0.008860f,-1.536486f,
  -0.024951f,-0.017586f,-0.006060f,1.009094f,
  // UpperLeg.L
  0.154583f,0.908683f,0.387819f,-0.974690f,
  0.948289f,-0.246606f,0.199832f,0.154858f,
  0.277220f,0.336871f,-0.899820f,-0.335614f,
  0.068523f,0.064158f,0.070947f,0.923639f,
  // LowerLeg.L
  1.000000f,0.000000f,-0.000000f,-0.096859f,
  -0.000000f,0.031345f,-0.999506f,0.069895f,
  0.000000f,0.999508f,0.031345f,-0.559444f,
  -0.000000f,0.015103f,-0.481577f,1.033676f,
  // UpperLeg.R
  0.473035f,-0.880218f,-0.038144f,0.960261f,
  -0.846314f,-0.465998f,0.258067f,0.389605f,
  -0.244929f,-0.089794f,-0.965380f,0.112890f,
  -0.093944f,0.058228f,0.042482f,0.928608f,
  // LowerLeg.R
  1.000000f,-0.000000f,0.000000f,0.096859f,
  0.000000f,-0.122096f,-0.992515f,0.154747f,
  0.000000f,0.992518f,-0.122095f,-0.542140f,
  0.000000f,-0.058827f,-0.478209f,1.074559f,
  // Foot.L
  0.328226f,0.818773f,0.471039f,-0.079670f,
  -0.313832f,-0.375816f,0.871936f,-0.015195f,
  0.890942f,-0.434019f,0.133605f,-0.084717f,
  -0.141979f,0.151929f,0.040475f,1.007782f,
  // PT.L
  1.000000f,0.000000f,0.000000f,-0.096859f,
  0.000000f,0.999755f,-0.022146f,-0.473690f,
  0.000000f,0.022146f,0.999755f,-0.768410f,
  0.544518f,0.655115f,0.212651f,0.464733f,
  // Foot.R
  0.935464f,0.253388f,-0.246376f,0.100142f,
  -0.308353f,0.925809f,-0.218625f,-0.037355f,
  0.172700f,0.280487f,0.944194f,-0.048284f,
  -0.018906f,0.058438f,0.170049f,0.986280f,
  // PT.R
  1.000000f,0.000000f,0.000000f,0.096859f,
  0.000000f,0.999755f,-0.022146f,-0.473690f,
  0.000000f,0.022146f,0.999755f,-0.768410f,
  0.005565f,0.461480f,0.648873f,0.282470f,
};
#endif

float4x4 Mat4_RotationPart(float4x4 mat)
{
  // @todo in the future this matrix will need to be normalized
  // to eliminate scaling from the matrix
  mat._m03 = 0.f;
  mat._m13 = 0.f;
  mat._m23 = 0.f;
  mat._m33 = 1.f;
  return mat;
}

float4x4 Mat4_Identity()
{
  return float4x4(1.0f, 0.0f, 0.0f, 0.0f,
                  0.0f, 1.0f, 0.0f, 0.0f,
                  0.0f, 0.0f, 1.0f, 0.0f,
                  0.0f, 0.0f, 0.0f, 1.0f);
}

float4x4 Mat4_TranslationPart(float4x4 mat)
{
  float4x4 res = Mat4_Identity();
  res._m03 = mat._m03;
  res._m13 = mat._m13;
  res._m23 = mat._m23;
  return res;
}

float4x4 Mat4_Scale(float scale)
{
  float4x4 res = Mat4_Identity();
  res._11 = scale;
  res._22 = scale;
  res._33 = scale;
  return res;
}

VSOutput ShaderModelVS(VSInput input)
{
  VSModelInstanceData instance = InstanceBuffer[input.InstanceIndex];

  float3 normal = mul(Mat4_RotationPart(instance.transform), float4(input.normal, 1.f)).xyz;
  float3 world_sun_pos = normalize(float3(-0.5f, 0.5f, 1.f));
  float in_sun_coef = dot(world_sun_pos, normal);

  float4 color = float4(input.color, 1.0f);
  color *= instance.color;
  color.xyz *= clamp(in_sun_coef, 0.25f, 1.0f);

  float4x4 model_transform = instance.transform;
  model_transform = mul(camera_transform, model_transform);

  float4 position = float4(input.position, 1.0f);
#if IS_SKINNED
  uint joint0 = (input.joints_packed4      ) & 0xff;
  uint joint1 = (input.joints_packed4 >>  8) & 0xff;
  uint joint2 = (input.joints_packed4 >> 16) & 0xff;
  uint joint3 = (input.joints_packed4 >> 24) & 0xff;
  //joint0 = joint1 = joint2 = joint3 = 1;

  float4x4 joint_mat0 = joint_inv_bind_mats[joint0];
  float4x4 joint_mat1 = joint_inv_bind_mats[joint1];
  float4x4 joint_mat2 = joint_inv_bind_mats[joint2];
  float4x4 joint_mat3 = joint_inv_bind_mats[joint3];

  //joint_mat0 = inverse(joint_mat0);
  //joint_mat0 = Mat4_TranslationPart(joint_mat0);
  //joint_mat1 = Mat4_TranslationPart(joint_mat1);
  //joint_mat2 = Mat4_TranslationPart(joint_mat2);
  //joint_mat3 = Mat4_TranslationPart(joint_mat3);
  //joint_mat1 = joint_mat2 = joint_mat3 = joint_mat0;

#if 1
  float4 pos0 = mul(joint_mat0, position);
  float4 pos1 = mul(joint_mat1, position);
  float4 pos2 = mul(joint_mat2, position);
  float4 pos3 = mul(joint_mat3, position);

  position =
    pos0 * input.weights.x +
    pos1 * input.weights.y +
    pos2 * input.weights.z +
    pos3 * input.weights.w;
#endif

  position = mul(Mat4_Scale(80.f), position);
  position = mul(instance.transform, position);
  position = mul(camera_transform, position);
#else
  position.z -= 200.f;
  position = mul(model_transform, position);
#endif

  VSOutput output;
  output.color = color;
  output.position = position;
  return output;
}

float4 ShaderModelPS(VSOutput input) : SV_Target0
{
  return input.color;
}
